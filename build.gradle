plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.14'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.bci'
version = '0.0.1-SNAPSHOT'
apply plugin: 'jacoco'

java {
    sourceCompatibility = '11'
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.5"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.jsonwebtoken:jjwt:0.12.3'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-inline:3.11.2'

}

tasks.named('test') {
    useJUnitPlatform()
    filter {
        includeTestsMatching "com.bci.auth.*"
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, excludes: ["com/bci/auth/**/BciApplication*.class",
                                         "**/models/**/*.class",
                                         "**/dtos/**/*.class"])
        }))
    }
}

